
You send data to the backend that is basicaly a struct:

{
    command_id,
    invocation_id,
    ...parameters
}

which first gets parsed by serde as a command (this only reads the id and the other fields are ignored)

then there is a match statement that matches the command is and tries to parse the data as the requested "call signature struct" 
which parses the parameters and if a parameter is missing it returns an error object


Thoughts:
- When creating a context on each connection, what do we do when the connection is lost?
should we add an session protocol?


Improvements:
- make async

TODO:
- add events (-> get next event api)
- we need a modified deltachat core that is able to serialize Events

- connect deltachat (in progress)

- make an api for configuring a new account so that you can actually login (online)

- serve blob directory (api to get a token that is the path on the http server)

Implement
- [ ] configure
- [X] get chatList chat ids
- [WIP] get chatListItem
- [ ] get Full Chat Info
- [X] get message ids for chat
- [ ] get message by Id
- [ ] send Message
- [ ] create Chat
- [ ] get Contact
- [ ] create Contact
- [ ] Tests ("e2e" written in javascript)
- [ ] send file/audio/image / set profile image / set group image -> somekind of http upload to core feature.